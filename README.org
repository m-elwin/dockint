* Docker Interactive
Provide interactive docker containers that can directly interact with the host hardware.
The idea is to reduce docker's isolation as much as possible while still allowing the user to access
completely different binaries, libraries, and Linux distributions.

** Why?
This program was primarily developed to allow a user to run different ROS distributions on the same computer and enable
everything in the container to directly interact with hardware, while using the same permissions as a regular user of the host machine.

* Usage
1. =dockint init [directory]= makes =directory= a =dockint= environment (defaults to the current directory)
   - Creates a =.dockint= sub-directory
   - Places the =dockint= =Dockerfile= and other =dockint= files that should be copied into the environment in the =dockint= directory

2. =dockint from image=, when run within a =dockint= environment:
   - Builds the =dockint= environment from the specified docker image

3. =dockint activate [directory]= places the user in a bash shell in the specified dockint environment
   - Default directory is the current directory

3. =dockint root [directory]= places the user as root in a bash shell in the specified dockint environment
   - Root in this container can access the host system (via /dev) so be careful
   - Default directory is the current directory
4. =dockint reset [directory]
   - Default directory is the current directory
   - Removes the docker container, undoing all the changes you have made

* Features
1. Inside the container, everything is run with the same =uid= and =username= as on the host.
2. The container has the same users and groups as the host system
   - If the user on the host system has =sudo= access and =sudo= is installed, the user in the will have =sudo= access
   - =/etc/shadow= is not copied into the container, so the user can have a different password
3. X Windows and GUI applications can be run within the container
4. The docker container is run in privileged mode and has access to all the host devices even if they are hot-plugged.
5. The docker container has the same ip address as the host and shares ports and network setup with it.


* Dockint Directory
- Each dockint environment contains a =.dockint= directory.
- dockint/Dockerfile is created when =dockint init= is called.
- This file contains the context for the docker image that is built.
- If the image is built there is a file =.dockint/image_name= which contains the name of the image associated with the dockint directory
- The container name is in a file called =.dockint/container_name=. This is the name of the container that will be used with the dockint directory
  - This is designed to persist, so that all activations of a dockint environment use the same container
